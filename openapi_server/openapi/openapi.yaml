openapi: 3.0.0
info:
  description: API for the Software and Service Quality Assurance as a Service (SQAaaS)
    component.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: SQAaaS API
  version: 0.1.0
servers:
- description: Optional server description, e.g. Main (production) server
  url: http://api.sqaaas.eosc-synergy.eu/v1
- description: Optional server description, e.g. Internal staging server for testing
  url: http://staging-api.sqaaas.eosc-synergy.eu
paths:
  /pipeline:
    get:
      description: |
        Returns the list of IDs for the defined pipelines.
      operationId: get_pipelines
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Pipeline'
                type: array
          description: Successful operation
      summary: Gets pipeline IDs.
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: |
        Provides a ready-to-use Jenkins pipeline based on the v2 series of jenkins-pipeline-library.
      operationId: add_pipeline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pipeline'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              example:
                id: dd7d8481-81a3-407f-95f0-a2f1cb382a4b
              schema:
                $ref: '#/components/schemas/inline_response_201'
          description: Created
          links:
            get_pipeline_by_pipeline_id:
              description: |
                The `id` value returned in the response can be used as the `pipeline_id` parameter in `GET /pipeline/{pipeline_id}`.
              operationId: get_pipeline_by_id
              parameters:
                pipeline_id: $response.body#/id
      summary: Creates a pipeline.
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /pipeline/{pipeline_id}:
    get:
      operationId: get_pipeline_by_id
      parameters:
      - description: ID of the pipeline to get
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Pipeline not found
      summary: Find pipeline by ID
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /pipeline/{pipeline_id}/composer:
    get:
      description: |
        Returns the content of JePL's docker-compose.yml file.
      operationId: get_pipeline_composer
      parameters:
      - description: ID of the pipeline to get
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JePL_composer'
                type: array
          description: Successful operation
      summary: Gets composer configuration used by the pipeline.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /pipeline/{pipeline_id}/config:
    get:
      description: |
        Returns the content of JePL's config.yml file.
      operationId: get_pipeline_config
      parameters:
      - description: ID of the pipeline to get
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JePL_config'
                type: array
          description: Successful operation
      summary: Gets pipeline's main configuration.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /pipeline/{pipeline_id}/jenkinsfile:
    get:
      description: |
        Returns the content of JePL's Jenkinsfile file.
      operationId: get_pipeline_jenkinsfile
      parameters:
      - description: ID of the pipeline to get
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JePL_jenkinsfile'
                type: array
          description: Successful operation
      summary: Gets Jenkins pipeline definition used by the pipeline.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /pipeline/{pipeline_id}/run:
    post:
      description: |
        Executes the given pipeline by means of the Jenkins API.
      operationId: run_pipeline
      parameters:
      - description: ID of the pipeline to get
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                build_url: https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/sqaaas-api-spec
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Successful operation
        "403":
          description: Unsuccessful operation
      summary: Runs pipeline.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /pipeline/{pipeline_id}/status:
    get:
      description: |
        Obtains the build URL in Jenkins for the given pipeline.
      operationId: get_pipeline_status
      parameters:
      - description: ID of the pipeline to get
        explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: Successful operation
        "403":
          description: Unsuccessful operation
      summary: Get pipeline status.
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  schemas:
    Repository:
      additionalProperties:
        properties:
          repo:
            example: https://github.com/jenkins-docs/simple-java-maven-app
            format: uri
            type: string
          branch:
            example: master
            type: string
        type: object
      example:
        simple-java-maven-app:
          repo: https://github.com/jenkins-docs/simple-java-maven-app
          branch: master
      type: object
    Creds_user_pass:
      example:
        password_var: GIT_PASS
        username_var: GIT_USER
        id: my-dockerhub-token
        type: username_password
      properties:
        id:
          example: my-dockerhub-token
          type: string
        type:
          enum:
          - username_password
          type: string
        username_var:
          example: GIT_USER
          type: string
        password_var:
          example: GIT_PASS
          type: string
      required:
      - id
      - password_var
      - username_var
      type: object
    Commands:
      properties:
        commands:
          default: []
          example:
          - mvn checkstyle:check
          items:
            type: string
          type: array
      type: object
    CriterionBuild:
      additionalProperties:
        additionalProperties:
          properties:
            repos:
              additionalProperties:
                additionalProperties:
                  $ref: '#/components/schemas/Commands'
                properties:
                  container:
                    type: string
                type: object
              type: object
          type: object
        type: object
      example:
        qc_style:
          repos:
            simple-java-maven-app:
              container: checkstyle
              commands:
              - mvn checkstyle:check
      type: object
    Environment:
      additionalProperties:
        type: string
      example:
        JPL_IGNOREFAILURES: defined
        JPL_DOCKERPUSH: docs service1 service4
      type: object
    JePL_config:
      example:
        environment:
          JPL_IGNOREFAILURES: defined
          JPL_DOCKERPUSH: docs service1 service4
        sqa_criteria:
          qc_style:
            repos:
              simple-java-maven-app:
                container: checkstyle
                commands:
                - mvn checkstyle:check
        config:
          project_repos:
            simple-java-maven-app:
              repo: https://github.com/jenkins-docs/simple-java-maven-app
              branch: master
          credentials:
          - password_var: GIT_PASS
            username_var: GIT_USER
            id: my-dockerhub-token
            type: username_password
          - password_var: GIT_PASS
            username_var: GIT_USER
            id: my-dockerhub-token
            type: username_password
      properties:
        config:
          $ref: '#/components/schemas/JePL_config_config'
        sqa_criteria:
          additionalProperties:
            additionalProperties:
              properties:
                repos:
                  additionalProperties:
                    additionalProperties:
                      $ref: '#/components/schemas/Commands'
                    properties:
                      container:
                        type: string
                    type: object
                  type: object
              type: object
            type: object
          example:
            qc_style:
              repos:
                simple-java-maven-app:
                  container: checkstyle
                  commands:
                  - mvn checkstyle:check
          type: object
        environment:
          additionalProperties:
            type: string
          example:
            JPL_IGNOREFAILURES: defined
            JPL_DOCKERPUSH: docs service1 service4
          type: object
      type: object
    ServiceDockerCompose:
      additionalProperties:
        properties:
          image:
            type: string
          hostname:
            type: string
          volumes:
            items:
              properties:
                type:
                  enum:
                  - bind
                  type: string
                source:
                  type: string
                target:
                  type: string
              type: object
            type: array
          command:
            type: string
        type: object
      example:
        checkstyle:
          image: checkstyle/maven-builder-image
          hostname: checkstyle-host
          volumes:
          - source: ./
            target: ./simple-java-app
            type: bind
          command: sleep 600000
      type: object
    JePL_composer:
      example:
        services:
          checkstyle:
            image: checkstyle/maven-builder-image
            hostname: checkstyle-host
            volumes:
            - source: ./
              target: ./simple-java-app
              type: bind
            command: sleep 600000
        version: "3.7"
      properties:
        version:
          example: "3.7"
          type: string
        services:
          additionalProperties:
            properties:
              image:
                type: string
              hostname:
                type: string
              volumes:
                items:
                  properties:
                    type:
                      enum:
                      - bind
                      type: string
                    source:
                      type: string
                    target:
                      type: string
                  type: object
                type: array
              command:
                type: string
            type: object
          example:
            checkstyle:
              image: checkstyle/maven-builder-image
              hostname: checkstyle-host
              volumes:
              - source: ./
                target: ./simple-java-app
                type: bind
              command: sleep 600000
          type: object
      type: object
    JePL_jenkinsfile:
      example:
        stages:
        - pipeline_config:
            credentials_id: userpass_dockerhub
            base_branch: https://github.com/jenkins-docs/simple-java-maven-app
            base_repository: master
            jepl_validator_docker_image: eoscsynergy/jpl-validator:1.1.0
            config_file: ./.sqa/config.yml
          when:
            branches:
            - master
            - master
        - pipeline_config:
            credentials_id: userpass_dockerhub
            base_branch: https://github.com/jenkins-docs/simple-java-maven-app
            base_repository: master
            jepl_validator_docker_image: eoscsynergy/jpl-validator:1.1.0
            config_file: ./.sqa/config.yml
          when:
            branches:
            - master
            - master
      properties:
        stages:
          items:
            $ref: '#/components/schemas/JePL_jenkinsfile_stages'
          type: array
      type: object
    Pipeline:
      example:
        config_data:
        - environment:
            JPL_IGNOREFAILURES: defined
            JPL_DOCKERPUSH: docs service1 service4
          sqa_criteria:
            qc_style:
              repos:
                simple-java-maven-app:
                  container: checkstyle
                  commands:
                  - mvn checkstyle:check
          config:
            project_repos:
              simple-java-maven-app:
                repo: https://github.com/jenkins-docs/simple-java-maven-app
                branch: master
            credentials:
            - password_var: GIT_PASS
              username_var: GIT_USER
              id: my-dockerhub-token
              type: username_password
            - password_var: GIT_PASS
              username_var: GIT_USER
              id: my-dockerhub-token
              type: username_password
        - environment:
            JPL_IGNOREFAILURES: defined
            JPL_DOCKERPUSH: docs service1 service4
          sqa_criteria:
            qc_style:
              repos:
                simple-java-maven-app:
                  container: checkstyle
                  commands:
                  - mvn checkstyle:check
          config:
            project_repos:
              simple-java-maven-app:
                repo: https://github.com/jenkins-docs/simple-java-maven-app
                branch: master
            credentials:
            - password_var: GIT_PASS
              username_var: GIT_USER
              id: my-dockerhub-token
              type: username_password
            - password_var: GIT_PASS
              username_var: GIT_USER
              id: my-dockerhub-token
              type: username_password
        composer_data:
          services:
            checkstyle:
              image: checkstyle/maven-builder-image
              hostname: checkstyle-host
              volumes:
              - source: ./
                target: ./simple-java-app
                type: bind
              command: sleep 600000
          version: "3.7"
        id: dd7d8481-81a3-407f-95f0-a2f1cb382a4b
        jenkinsfile_data:
          stages:
          - pipeline_config:
              credentials_id: userpass_dockerhub
              base_branch: https://github.com/jenkins-docs/simple-java-maven-app
              base_repository: master
              jepl_validator_docker_image: eoscsynergy/jpl-validator:1.1.0
              config_file: ./.sqa/config.yml
            when:
              branches:
              - master
              - master
          - pipeline_config:
              credentials_id: userpass_dockerhub
              base_branch: https://github.com/jenkins-docs/simple-java-maven-app
              base_repository: master
              jepl_validator_docker_image: eoscsynergy/jpl-validator:1.1.0
              config_file: ./.sqa/config.yml
            when:
              branches:
              - master
              - master
      properties:
        id:
          example: dd7d8481-81a3-407f-95f0-a2f1cb382a4b
          readOnly: true
          type: string
        config_data:
          items:
            $ref: '#/components/schemas/JePL_config'
          type: array
        composer_data:
          $ref: '#/components/schemas/JePL_composer'
        jenkinsfile_data:
          $ref: '#/components/schemas/JePL_jenkinsfile'
      type: object
    inline_response_201:
      example:
        id: id
      properties:
        id:
          description: UUID identifying the pipeline
          type: string
      type: object
    inline_response_200:
      example:
        build_url: https://openapi-generator.tech
      properties:
        build_url:
          format: uri
          type: string
      type: object
    inline_response_200_1:
      example:
        build_url: https://jenkins.eosc-synergy.eu/job/eosc-synergy-org/job/sqaaas-api-spec
      properties:
        build_url:
          format: uri
          type: string
      type: object
    JePL_config_config:
      example:
        project_repos:
          simple-java-maven-app:
            repo: https://github.com/jenkins-docs/simple-java-maven-app
            branch: master
        credentials:
        - password_var: GIT_PASS
          username_var: GIT_USER
          id: my-dockerhub-token
          type: username_password
        - password_var: GIT_PASS
          username_var: GIT_USER
          id: my-dockerhub-token
          type: username_password
      properties:
        project_repos:
          additionalProperties:
            properties:
              repo:
                example: https://github.com/jenkins-docs/simple-java-maven-app
                format: uri
                type: string
              branch:
                example: master
                type: string
            type: object
          example:
            simple-java-maven-app:
              repo: https://github.com/jenkins-docs/simple-java-maven-app
              branch: master
          type: object
        credentials:
          items:
            $ref: '#/components/schemas/Creds_user_pass'
          type: array
      type: object
    JePL_jenkinsfile_when:
      example:
        branches:
        - master
        - master
      properties:
        branches:
          items:
            example: master
            type: string
          type: array
      type: object
    JePL_jenkinsfile_pipeline_config:
      example:
        credentials_id: userpass_dockerhub
        base_branch: https://github.com/jenkins-docs/simple-java-maven-app
        base_repository: master
        jepl_validator_docker_image: eoscsynergy/jpl-validator:1.1.0
        config_file: ./.sqa/config.yml
      properties:
        config_file:
          example: ./.sqa/config.yml
          type: string
        base_repository:
          example: master
          type: string
        base_branch:
          example: https://github.com/jenkins-docs/simple-java-maven-app
          type: string
        credentials_id:
          example: userpass_dockerhub
          type: string
        jepl_validator_docker_image:
          example: eoscsynergy/jpl-validator:1.1.0
          type: string
      type: object
    JePL_jenkinsfile_stages:
      example:
        pipeline_config:
          credentials_id: userpass_dockerhub
          base_branch: https://github.com/jenkins-docs/simple-java-maven-app
          base_repository: master
          jepl_validator_docker_image: eoscsynergy/jpl-validator:1.1.0
          config_file: ./.sqa/config.yml
        when:
          branches:
          - master
          - master
      properties:
        when:
          $ref: '#/components/schemas/JePL_jenkinsfile_when'
        pipeline_config:
          $ref: '#/components/schemas/JePL_jenkinsfile_pipeline_config'
      type: object
